// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pedal_loopregistratie_Model.DAL;

namespace Pedal_loopregistratie_Model.Migrations
{
    [DbContext(typeof(PedalDbContext))]
    [Migration("20181017183221_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("Pedal_loopregistratie_Model.Residence", b =>
                {
                    b.Property<int>("ResidenceId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("ResidenceId");

                    b.ToTable("Residences");

                    b.HasData(
                        new { ResidenceId = 1, Description = "Pedal is een overkoepelende organisatie voor studentenresidenties.", Name = "Pedal" },
                        new { ResidenceId = 2, Description = "Hesteria is studentenclub voor iedereen uit Heist en omstreken.", Name = "Hesteria" }
                    );
                });

            modelBuilder.Entity("Pedal_loopregistratie_Model.Runner", b =>
                {
                    b.Property<int>("RunnerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<int>("ResidenceId");

                    b.HasKey("RunnerId");

                    b.HasIndex("ResidenceId");

                    b.ToTable("Runners");
                });

            modelBuilder.Entity("Pedal_loopregistratie_Model.Runner", b =>
                {
                    b.HasOne("Pedal_loopregistratie_Model.Residence", "Residence")
                        .WithMany("Runners")
                        .HasForeignKey("ResidenceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
